PROCEDURE dot_product(v1,v2:ARRAY_OF FLOAT, VAR ps : FLOAT, n:INTEGER)
VAR 
    i : INTEGER;
    ps := 0;
BEGIN
FOR i FROM 0 TO v1.length DO
    IF(v1.length = v2.length) THEN
        ps := ps + v1[i] * v2[i];
        END_FOR
        Write("The Dot Product of your vectors is ",ps);
    ELSE
        Write("Vector length not equale");
    END_IF
END

ALGORITHM DOT_PRODUCT
VAR
    V1,V2 : ARRAY_OF FLOAT[50];
    i,n:INTEGER;
    BEGIN 
    Read(n)
    FOR i FROM 0 TO n-1 DO
     Read(V1[i])
     END_FOR
     FOR j FROM 0 TO n-1 DO
     Read(V2[j])
     END_FOR
     dot_product(v1,v2,ps,n)
     write(ps)
      IF (ps = 0) THEN
        Write("V1 and V2 are orthogonal");
    ELSE
        Write("V1 and V2 are not orthogonal");
    END_IF
END

FUNCTION dot_product(v1,v2:ARRAY_OF FLOAT, VAR ps : FLOAT, n:INTEGER) : FLOAT
VAR
    V1,V2 : ARRAY_OF FLOAT[50];
    i,n:INTEGER;
    ps := FLOAT
    BEGIN 
    Read(n)
    FOR i FROM 0 TO n-1 DO
     Read(V1[i])
     END_FOR
     FOR j FROM 0 TO n-1 DO
     Read(V2[j])
     END_FOR

     ps := dot_product(v1,v2,n)
      IF (ps = 0) THEN
        Write("V1 and V2 are orthogonal");
    ELSE
        Write("V1 and V2 are not orthogonal");
    END_IF
END 